C51 COMPILER V9.60.7.0   SERIAL_PORT                                                       02/26/2025 16:50:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SERIAL_PORT
OBJECT MODULE PLACED IN ..\Output\hex\serial_port.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE ..\BSP\Src\serial_port.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BS
                    -P\Inc;..\Core\Inc;..\Drivers;..\Emembed\Inc;..\Middlewares;..\SYSTEM\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\serial_por
                    -t.lst) OBJECT(..\Output\hex\serial_port.obj)

line level    source

   1          #include "serial_port.h"
   2          
   3          RS485 rs485;
   4          
   5          /**
   6           * @brief       串口4调用结构体 rs485 初始化
   7           *
   8           * @param   
   9           *
  10           * @return  void
  11          **/
  12          void Uart4_Send_Statu_Init( void )
  13          {
  14   1          rs485.RX4_rcv_end_Flag = 0;
  15   1          rs485.TX4_buf[128] = 0;
  16   1          rs485.RX4_buf[128] = 0;
  17   1          rs485.TX4_send_bytelength = 0;
  18   1          rs485.TX4_send_cnt = 0;
  19   1          rs485.RX4_rcv_timeout = 0;
  20   1          rs485.RX4_rcv_cnt = 0;
  21   1      }
  22          
  23          /**
  24           * @brief       串口4中断处理函数
  25           *
  26           * @param   
  27           *
  28           * @return  void
  29          **/
  30          void Uart4_ISR() interrupt 18
  31          {   
  32   1          /* 1, 检测到硬件将S4TI置1，即发送完毕                       */
  33   1          if( S4CON & S4TI )          //
  34   1          {
  35   2              /* 2, 软件将S4TI清零，等待发送标志位重置，可继续发送    */
  36   2              S4CON &= ~S4TI;         
  37   2              
  38   2              /* 3, 依次将TX4_buf中数据送出（写S4BUF操作即为发送）    */
  39   2              if( rs485.TX4_send_bytelength != 0 )
  40   2              {
  41   3                  S4BUF = rs485.TX4_buf[rs485.TX4_send_cnt++];
  42   3                  rs485.TX4_send_bytelength--;
  43   3              }else
  44   2              {
  45   3                  rs485.TX4_send_cnt = 0;
  46   3              }
  47   2          }
  48   1          
  49   1          /* 1, 检测到硬件将S3RI置1，即接收完毕                       */
  50   1          if( S4CON & S4RI )
  51   1          {
  52   2              /* 2, 软件将S3RI清零，等待接收标志位重置，可继续发送    */
  53   2              S4CON &= ~S4RI;
C51 COMPILER V9.60.7.0   SERIAL_PORT                                                       02/26/2025 16:50:34 PAGE 2   

  54   2      
  55   2              /* 3, 判断数据包是否接收完毕                           */
  56   2              if( !rs485.RX4_rcv_end_Flag )
  57   2              {
  58   3                  /* 4, 数据包大于RX_buf 则从头计数                  */
  59   3                  if( rs485.RX4_rcv_cnt > 128 )
  60   3                  {
  61   4                      rs485.RX4_rcv_cnt = 0;
  62   4                  }
  63   3      
  64   3                  /* 5, 依次将RX4_buf中数据接收（读S2BUF操作即为接收）*/
  65   3                  rs485.RX4_buf[rs485.RX4_rcv_cnt] = S4BUF;
  66   3                  rs485.RX4_rcv_cnt++;
  67   3              }
  68   2              /* 6, 重置接收完毕判断时间                              */
  69   2              rs485.RX4_rcv_timeout = 50;
  70   2          }
  71   1      }
  72          
  73          /**
  74           * @brief       是否接收完毕判断函数
  75           *
  76           * @param   
  77           *
  78           * @return  void
  79          **/
  80          void Tim0_ISR( void ) interrupt 1   //1ms
  81          {
  82   1          /* 1, 如果接收未超时                                             */
  83   1          if ( rs485.RX4_rcv_timeout != 0 )  
  84   1          {
  85   2              rs485.RX4_rcv_timeout--;
  86   2              /* 2, 如果接收超时                                          */
  87   2              if( rs485.RX4_rcv_timeout == 0 )  
  88   2              {
  89   3                  if( rs485.RX4_rcv_cnt > 0 )  
  90   3                  {   
  91   4                       /* 3, 接收完毕标志位亮起并初始化接收缓冲区         */
  92   4                      rs485.RX4_rcv_end_Flag = 1;    
  93   4                  }
  94   3              }
  95   2          } 
  96   1      }
  97          
  98          /**
  99           * @brief       串口1中断处理函数
 100           *
 101           * @param   
 102           *
 103           * @return  void
 104          **/
 105          void Uart1_ISR() interrupt 4
 106          {
 107   1          if (SCON & TI)                //在停止位开始发送时，该位置1
 108   1          {
 109   2              SCON &= ~TI;                         //清除S4CON寄存器对应S4TI位（该位必须软件清零）
 110   2          }
 111   1      
 112   1          if (SCON & RI)                //串行接收到停止位的中间时刻时，该位置1
 113   1          {
 114   2              SCON &= ~RI;              //清除S4CON寄存器对应S4RI位（该位必须软件清零） 
 115   2          }
C51 COMPILER V9.60.7.0   SERIAL_PORT                                                       02/26/2025 16:50:34 PAGE 3   

 116   1      }
 117          
 118          /**
 119           * @brief       串口重定向
 120           *
 121           * @param   c:字符串
 122           *
 123           * @return  c
 124          **/
 125          char putchar(char c)  // 串口重定向需要添加头文件stdio.h
 126          {
 127   1          SBUF = c;
 128   1          while(!TI);
 129   1          TI = 0;
 130   1          return c;
 131   1      }
 132          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    258    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    263    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
