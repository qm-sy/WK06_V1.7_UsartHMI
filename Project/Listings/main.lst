C51 COMPILER V9.60.7.0   MAIN                                                              02/25/2025 21:23:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\hex\main.obj
COMPILER INVOKED BY: D:\APP\Keil_STM32\C51\BIN\C51.EXE ..\Core\Src\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\I
                    -nc;..\Core\Inc;..\Drivers;..\Emembed\Inc;..\Middlewares;..\SYSTEM\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJ
                    -ECT(..\Output\hex\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          void main( void )
   4          {
   5   1          P_SW2 |= 0x80;
   6   1      
   7   1          GPIO_Init();
   8   1      
   9   1          /*  温度控制  */
  10   1          ADC_Init();
  11   1      
  12   1          /*  4路220输出控制  */
  13   1          Power_Statu_Init();
  14   1          INT0_Init();
  15   1          Timer1_Init();
  16   1      
  17   1          /*  PWM控制  */
  18   1          PWM_Init();
  19   1      
  20   1          /*  modbus控制  */
  21   1          Uart4_Send_Statu_Init();
  22   1          Timer0_Init();
  23   1          Uart4_Init();
  24   1      
  25   1          /*  调试使用  */
  26   1          Uart1_Init();
  27   1      
  28   1          EA = 1;
  29   1      
  30   1          eeprom_statu_judge();
  31   1          printf("======== code start ========\r\n"); 
  32   1      
  33   1          while (1)
  34   1          { 
  35   2              // temp.temp_value1 =  get_temp(NTC_1);
  36   2              // temp.temp_value2 =  get_temp(NTC_2);
  37   2              // temp.temp_value3 =  get_temp(NTC_3);
  38   2              // printf(" The value of tmep1 is %d \r\n",(int)temp.temp_value1);
  39   2              // printf(" The value of tmep2 is %d \r\n",(int)temp.temp_value2);
  40   2              // printf(" The value of tmep3 is %d \r\n",(int)temp.temp_value3);
  41   2              temp_scan();
  42   2              Modbus_Event();
  43   2          }
  44   1          
  45   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     55    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              02/25/2025 21:23:37 PAGE 2   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
